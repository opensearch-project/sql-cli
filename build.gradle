plugins {
    id 'java'
    id 'application'
    id 'base'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.diffplug.spotless' version '7.1.0'
}

import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer
import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'Gateway'
}

repositories {
    mavenCentral()
    maven {
        url "https://ci.opensearch.org/ci/dbc/snapshots/maven/"
    }
    maven {
        url "https://jitpack.io"
    }
}

ext {
    // ALSO CHANGE sql_version.py's version
    // TODO: single source of truth
    sqlPluginVersion = "3.3.0"
    opensearchClientVersion = '3.2.0'
}

dependencies {
    // SQL deps
    implementation files('submodule/datasources-3.1.0.0-SNAPSHOT.jar')
    implementation "org.opensearch.query:unified-query-common:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    implementation "org.opensearch.query:unified-query-core:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    implementation "org.opensearch.query:unified-query-opensearch:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    implementation "org.opensearch.query:unified-query-ppl:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    implementation "org.opensearch.query:unified-query-sql:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    implementation "org.opensearch.query:unified-query-protocol:${project.ext.sqlPluginVersion}.0-SNAPSHOT"
    // Clients
    implementation "org.opensearch.client:opensearch-rest-high-level-client:${opensearchClientVersion}"
    implementation "org.opensearch.client:opensearch-rest-client:${opensearchClientVersion}"
    implementation "org.opensearch.client:opensearch-java:${opensearchClientVersion}"
    // AWS SDK v2
    implementation 'software.amazon.awssdk:sdk-core:2.31.63'
    implementation 'software.amazon.awssdk:auth:2.31.63'
    implementation 'software.amazon.awssdk:regions:2.31.63'
    implementation 'software.amazon.awssdk:apache-client:2.31.63'
    implementation 'software.amazon.awssdk:sts:2.31.63'
    implementation 'software.amazon.awssdk:aws-core:2.31.63'
    // Logging
    implementation 'org.apache.logging.log4j:log4j-core:2.25.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.25.0'
    // Logback
    implementation 'ch.qos.logback:logback-classic:1.5.18'
    // Apache Commons Configuration for YAML file parsing
    implementation 'org.apache.commons:commons-configuration2:2.12.0'
    implementation 'commons-beanutils:commons-beanutils:1.11.0'
    implementation 'org.yaml:snakeyaml:2.2'
    // JSON
    implementation 'org.json:json:20250517'
    implementation 'com.google.code.gson:gson:2.13.1'
    // Guice, dependency injection
    implementation 'com.google.inject:guice:7.0.0'
    // Py4J
    implementation 'net.sf.py4j:py4j:0.10.9.9'
    // HTTP5
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.14.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.14.0"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

configurations {
    sharedDependency

    implementation {
        extendsFrom sharedDependency
    }
}

// Define source sets
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

jar {
    archiveBaseName.set("opensearchsql")
}

test {
    useJUnitPlatform()
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**', 'src/main/gen/**'
        }
        importOrder()
        licenseHeader("/*\n" +
                " * Copyright OpenSearch Contributors\n" +
                " * SPDX-License-Identifier: Apache-2.0\n" +
                " */\n\n")
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        googleJavaFormat('1.17.0').reflowLongStrings().groupArtifact('com.google.googlejavaformat:google-java-format')
    }
}

shadowJar {
    archiveBaseName.set('opensearchsqlcli')
    duplicatesStrategy = DuplicatesStrategy.FAIL
    zip64 = true

    manifest {
        attributes 'Main-Class': 'Gateway'
        attributes 'Multi-Release': 'true'
    }

    from(sourceSets.main.output)
    configurations = [project.configurations.runtimeClasspath]

    transform(Log4j2PluginsCacheFileTransformer)
    transform(ServiceFileTransformer)

    mergeServiceFiles()
    mergeServiceFiles('META-INF/services/')
    mergeServiceFiles('META-INF/spring/')
}
